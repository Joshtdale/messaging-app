{"ast":null,"code":"const Token = require(\"./token\");\nconst isBase64 = require(\"is-base64\");\nfunction Config(options) {\n  options = options || {};\n  let useTLS = false;\n  if (options.useTLS !== undefined && options.encrypted !== undefined) {\n    throw new Error(\"Cannot set both `useTLS` and `encrypted` configuration options\");\n  } else if (options.useTLS !== undefined) {\n    useTLS = options.useTLS;\n  } else if (options.encrypted !== undefined) {\n    // `encrypted` deprecated in favor of `useTLS`\n    console.warn(\"`encrypted` option is deprecated in favor of `useTLS`\");\n    useTLS = options.encrypted;\n  }\n  this.scheme = options.scheme || (useTLS ? \"https\" : \"http\");\n  this.port = options.port;\n  this.appId = options.appId;\n  this.token = new Token(options.key, options.secret);\n  this.timeout = options.timeout;\n  this.agent = options.agent;\n\n  // Handle deprecated raw 32 byte string as key\n  if (options.encryptionMasterKey !== undefined) {\n    if (options.encryptionMasterKeyBase64 !== undefined) {\n      throw new Error(\"Do not specify both encryptionMasterKey and encryptionMasterKeyBase64. \" + \"encryptionMasterKey is deprecated, please specify only encryptionMasterKeyBase64.\");\n    }\n    console.warn(\"`encryptionMasterKey` option is deprecated in favor of `encryptionMasterKeyBase64`\");\n    if (typeof options.encryptionMasterKey !== \"string\") {\n      throw new Error(\"encryptionMasterKey must be a string\");\n    }\n    if (options.encryptionMasterKey.length !== 32) {\n      throw new Error(\"encryptionMasterKey must be 32 bytes long, but the string '\" + options.encryptionMasterKey + \"' is \" + options.encryptionMasterKey.length + \" bytes long\");\n    }\n    this.encryptionMasterKey = Buffer.from(options.encryptionMasterKey);\n  }\n\n  // Handle base64 encoded 32 byte key to encourage use of the full range of byte values\n  if (options.encryptionMasterKeyBase64 !== undefined) {\n    if (typeof options.encryptionMasterKeyBase64 !== \"string\") {\n      throw new Error(\"encryptionMasterKeyBase64 must be a string\");\n    }\n    if (!isBase64(options.encryptionMasterKeyBase64)) {\n      throw new Error(\"encryptionMasterKeyBase64 must be valid base64\");\n    }\n    const decodedKey = Buffer.from(options.encryptionMasterKeyBase64, \"base64\");\n    if (decodedKey.length !== 32) {\n      throw new Error(\"encryptionMasterKeyBase64 must decode to 32 bytes, but the string \" + options.encryptionMasterKeyBase64 + \"' decodes to \" + decodedKey.length + \" bytes\");\n    }\n    this.encryptionMasterKey = decodedKey;\n  }\n}\nConfig.prototype.prefixPath = function () {\n  throw \"NotImplementedError: #prefixPath should be implemented by subclasses\";\n};\nConfig.prototype.getBaseURL = function () {\n  const port = this.port ? \":\" + this.port : \"\";\n  return this.scheme + \"://\" + this.host + port;\n};\nmodule.exports = Config;","map":{"version":3,"names":["Token","require","isBase64","Config","options","useTLS","undefined","encrypted","Error","console","warn","scheme","port","appId","token","key","secret","timeout","agent","encryptionMasterKey","encryptionMasterKeyBase64","length","Buffer","from","decodedKey","prototype","prefixPath","getBaseURL","host","module","exports"],"sources":["/workspace/messaging-app/app/node_modules/pusher/lib/config.js"],"sourcesContent":["const Token = require(\"./token\")\nconst isBase64 = require(\"is-base64\")\n\nfunction Config(options) {\n  options = options || {}\n\n  let useTLS = false\n  if (options.useTLS !== undefined && options.encrypted !== undefined) {\n    throw new Error(\n      \"Cannot set both `useTLS` and `encrypted` configuration options\"\n    )\n  } else if (options.useTLS !== undefined) {\n    useTLS = options.useTLS\n  } else if (options.encrypted !== undefined) {\n    // `encrypted` deprecated in favor of `useTLS`\n    console.warn(\"`encrypted` option is deprecated in favor of `useTLS`\")\n    useTLS = options.encrypted\n  }\n  this.scheme = options.scheme || (useTLS ? \"https\" : \"http\")\n  this.port = options.port\n\n  this.appId = options.appId\n  this.token = new Token(options.key, options.secret)\n\n  this.timeout = options.timeout\n  this.agent = options.agent\n\n  // Handle deprecated raw 32 byte string as key\n  if (options.encryptionMasterKey !== undefined) {\n    if (options.encryptionMasterKeyBase64 !== undefined) {\n      throw new Error(\n        \"Do not specify both encryptionMasterKey and encryptionMasterKeyBase64. \" +\n          \"encryptionMasterKey is deprecated, please specify only encryptionMasterKeyBase64.\"\n      )\n    }\n    console.warn(\n      \"`encryptionMasterKey` option is deprecated in favor of `encryptionMasterKeyBase64`\"\n    )\n    if (typeof options.encryptionMasterKey !== \"string\") {\n      throw new Error(\"encryptionMasterKey must be a string\")\n    }\n    if (options.encryptionMasterKey.length !== 32) {\n      throw new Error(\n        \"encryptionMasterKey must be 32 bytes long, but the string '\" +\n          options.encryptionMasterKey +\n          \"' is \" +\n          options.encryptionMasterKey.length +\n          \" bytes long\"\n      )\n    }\n\n    this.encryptionMasterKey = Buffer.from(options.encryptionMasterKey)\n  }\n\n  // Handle base64 encoded 32 byte key to encourage use of the full range of byte values\n  if (options.encryptionMasterKeyBase64 !== undefined) {\n    if (typeof options.encryptionMasterKeyBase64 !== \"string\") {\n      throw new Error(\"encryptionMasterKeyBase64 must be a string\")\n    }\n    if (!isBase64(options.encryptionMasterKeyBase64)) {\n      throw new Error(\"encryptionMasterKeyBase64 must be valid base64\")\n    }\n\n    const decodedKey = Buffer.from(options.encryptionMasterKeyBase64, \"base64\")\n    if (decodedKey.length !== 32) {\n      throw new Error(\n        \"encryptionMasterKeyBase64 must decode to 32 bytes, but the string \" +\n          options.encryptionMasterKeyBase64 +\n          \"' decodes to \" +\n          decodedKey.length +\n          \" bytes\"\n      )\n    }\n\n    this.encryptionMasterKey = decodedKey\n  }\n}\n\nConfig.prototype.prefixPath = function () {\n  throw \"NotImplementedError: #prefixPath should be implemented by subclasses\"\n}\n\nConfig.prototype.getBaseURL = function () {\n  const port = this.port ? \":\" + this.port : \"\"\n  return this.scheme + \"://\" + this.host + port\n}\n\nmodule.exports = Config\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}